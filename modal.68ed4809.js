parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"rV7j":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.pagination=exports.renderMoviesInputTitle=exports.renderMoviesFirstLoad=exports.fetchMovieById=exports.fetchInputMovieTitle=exports.fetchFirstLoadMovies=exports.paginationButtons=exports.galleryOfMovies=exports.inputFormGenreChange=exports.inputFormTitle=exports.inputFormButton=void 0;const e=document.querySelector(".search-form__input");exports.inputFormTitle=e;const t=document.querySelector(".search-form__btn");exports.inputFormButton=t;const n=document.querySelector(".header__genre-option");exports.inputFormGenreChange=n;const a=document.querySelector(".gallery_movies");exports.galleryOfMovies=a;const o=document.querySelector(".genres"),i=document.querySelector(".pagination_buttons");exports.paginationButtons=i;const r="?api_key=fd87aef18dfd3a2446d882cb85b7272d",s="https://api.themoviedb.org/3",c="/trending/all/day",d="/search/movie",l="/genre/movie/list",p="/genre/tv/list",m="/trending/movie/day",v="/trending/movie/week";let _=1;const g=async()=>{const e=await fetch(`${s}${c}${r}&page=${_}`);return await e.json()};exports.fetchFirstLoadMovies=g;const u=async e=>{const t=await fetch(`${s}/search/movie${r}&query=${e}&page=${_}&include_adult=false`);return await t.json()};exports.fetchInputMovieTitle=u;const y=async(e,t="movie")=>{const n=await fetch(`${s}/${t}/${e}${r}`);return await n.json()};exports.fetchMovieById=y;let $=async e=>{const t=await w();a.innerHTML="";const n=e.map(({poster_path:e,title:n,name:a,genre_ids:o,release_date:i,first_air_date:r,vote_average:s,id:c,media_type:d,original_title:l,original_name:p})=>`\n                <li class="movie-card" data-id="${c}" data-type="${d}">\n                    <img class="movie-card__img" src="https://image.tmdb.org/t/p/w500/${e}" alt="poster of "${void 0===n?a:n}"" loading="lazy" />\n                    <h2 class="movie-card__title">${void 0===n?a:n}</h2>\n                    <div class="movie-card__info">\n                        <p class="movie-card__genre-and-year">\n                            <span class="movie-card__genre">${o.map(e=>t[e]).join(", ")}</span>\n                            <span class="movie-card__year">${i||r}</span>\n                        </p>\n                        <p class="movie-card__vote-average">${s.toFixed(2)}</p>\n                    </div>\n                </li>\n            `).join("");return a.insertAdjacentHTML("beforeend",n)};exports.renderMoviesFirstLoad=$;let f=async e=>{const t=await w();a.innerHTML="";const n=e.map(({poster_path:e,original_title:n,title:a,genre_ids:o,release_date:i,vote_average:r,name:s,original_name:c,id:d})=>`\n                <li class="movie-card" data-id="${d}" data-type="movie">\n                    <img class="movie-card__img" src="https://image.tmdb.org/t/p/w500/${e}" alt="${void 0===a?s:a}" loading="lazy" />\n                    <h2 class="movie-card__title">${void 0===a?s:a}</h2>\n                    <div class="movie-card__info">\n                        <p class="movie-card__genre-and-year">\n                            <span class="movie-card__genre">${o.map(e=>t[e]).join(", ")}</span>\n                            <span class="movie-card__year">${i||first_air_date}</span>\n                        </p>\n                        <p class="movie-card__vote-average">${r.toFixed(2)}</p>\n                    </div>\n                </li>\n            `).join("");return a.insertAdjacentHTML("beforeend",n)};exports.renderMoviesInputTitle=f;const h=async()=>{const e=await fetch(`${s}/genre/movie/list${r}&language=en-US`),t=await fetch(`${s}/genre/tv/list${r}&language=en-US`),n=await e.json(),a=await t.json(),o=[...new Map([...n.genres,...a.genres].map(e=>[e.id,e])).values()];return M=o,o};let x,M;console.log(M);const w=async()=>(x||(x=await h()),x.reduce((e,t)=>({...e,[t.id]:t.name}),{}));let j=()=>{o.innerHTML="";const e=allGenresList.map(e=>`\n                <div>\n                    <ul>\n                        <li class="genres">${e}</li>\n                    </ul>\n                </div>\n            `).join("");return o.insertAdjacentHTML("beforeend",e)};const T=async(e,t)=>{if(exports.paginationButtons=i="",e>=1)for(let n=1;n<=e;n++){let e=document.createElement("button");e.innerHTML=n,i.appendChild(e)}};exports.pagination=T;
},{}],"MgTz":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.addToLibrary=exports.remove=exports.load=exports.save=void 0;const e=(e,t)=>{try{const o=JSON.stringify(t);localStorage.setItem(e,o)}catch(r){console.error("Set state error: ",r.message)}};exports.save=e;const t=e=>{try{const r=localStorage.getItem(e);return null===r?void 0:JSON.parse(r)}catch(t){console.error("Get state error: ",t.message)}};exports.load=t;const r=e=>{try{localStorage.removeItem(e)}catch(t){console.error("Get state error: ",t.message)}};exports.remove=r;const o=(r,o,s="watchedList")=>{const a=t(s);if(null==a){let t=[];return t.push({movieId:r,type:o}),e(s,t)}let c=!1;return a.forEach(e=>{e.movieId==r&&e.type===o&&(c=!0)}),c?alert("Movie already on the list."):(a.push({movieId:r,type:o}),e(s,a))};exports.addToLibrary=o;
},{}],"RSqK":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getMovieAndDisplayModal=void 0;var t=require("./fetchData"),e=require("./utils");const i=document.querySelector("[data-modal]");document.addEventListener("click",t=>{!t.target.matches("[data-modal-close]")&&t.target.closest("[data-modal]")||i.classList.add("is-hidden")}),document.addEventListener("keydown",t=>{"Escape"===t.code&&i.classList.add("is-hidden")});const s=async(s,n)=>{const l=await(0,t.fetchMovieById)(s,n);let a=!1,o=!1;(0,e.load)("watchedList").forEach(t=>{t.movieId==s&&t.type===n&&(a=!0)}),(0,e.load)("queueList").forEach(t=>{t.movieId==s&&t.type===n&&(o=!0)}),i.classList.remove("is-hidden");let d=`\n        <ul class="modal__pic">\n            <li class="pic">\n                <picture>\n                    <source\n                        src="https://image.tmdb.org/t/p/w300/${l.poster_path}"\n                        srcset="https://image.tmdb.org/t/p/w300/${l.poster_path} 2x"\n                        media="(min-width:320px) and (max-width:767px)"/>\n                    <source\n                        src="https://image.tmdb.org/t/p/w500/${l.poster_path}"\n                        srcset="https://image.tmdb.org/t/p/w500/${l.poster_path} 2x"\n                        media="(min-width:768px) and (max-width:1023px)"/>\n                    <source\n                        src="https://image.tmdb.org/t/p/w500/${l.poster_path}"\n                        srcset="https://image.tmdb.org/t/p/w500/${l.poster_path} 2x"\n                        media="(min-width:1024px)"/>\n                    <img src="https://image.tmdb.org/t/p/w500/${l.poster_path}" \n                        alt="A FISTFUL OF LEAD"\n                    />\n                </picture>\n            </li>\n        \n        <ul class="modal__description">\n            <ul class="description__list">\n                <li class="description__film">${void 0===l.title?l.name:l.title}</li>\n                <button type="button" class="close-btn" data-modal-close>x\n                    <svg width="14" height="14">\n                        <use href="../src/images/svg/symbol-defs.svg#icon-close"></use>\n                    </svg>\n                </button>\n                    <ul class="description__vote">\n                        <li class="vote__text">Vote / Votes</li>\n                        <li class="vote__value"><span class="vote__mark">${l.vote_average.toFixed(1)}</span> / <span class="votes__mark">${l.vote_count}\n                        </span></li>\n                    </ul>\n                    <ul class="description__popularity">\n                        <li class="popularity__text">Popularity</li>\n                        <li class="popularity__value">${l.popularity.toFixed(1)}</li>\n                    </ul>\n                    <ul class="description__title">\n                        <li class="title__text">Original Title</li>\n                        <li class="title__value">${void 0===l.original_title?l.original_name:l.original_title}</li>\n                    </ul>\n                    <ul class="description__genre">\n                        <li class="genre__text">Genre</li>\n                        <li class="genre__value">${[...l.genres.map(t=>t.name)].join(", ")}</li>\n                    </ul>\n                <li class="description__header">ABOUT</li>\n                <li class="description__text">${l.overview}</li>\n                <ul class="description__btn">\n                    <li><button class="watched-btn">ADD TO WATCHED</button></li>\n                    <li><button class="queue-btn">ADD TO QUEUE</button></li>\n                    <li></li>\n                </ul>\n            </ul>\n        </ul>`;i.innerHTML=d;let r=document.querySelector(".watched-btn"),c=document.querySelector(".queue-btn");a&&(r.disabled=!0,r.innerHTML="On List"),o&&(c.disabled=!0,c.innerHTML="On List"),r.addEventListener("click",()=>{r.disabled=!0,(0,e.addToLibrary)(s,n,"watchedList"),r.innerHTML="Added"}),c.addEventListener("click",()=>{c.disabled=!0,(0,e.addToLibrary)(s,n,"queueList"),c.innerHTML="Added"})};exports.getMovieAndDisplayModal=s;
},{"./fetchData":"rV7j","./utils":"MgTz"}]},{},["RSqK"], null)
//# sourceMappingURL=/Filmoteka-team-02/modal.68ed4809.js.map