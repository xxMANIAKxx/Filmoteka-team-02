{"version":3,"sources":["js/fetchData.js"],"names":["inputFormTitle","document","querySelector","inputFormButton","inputFormGenreChange","galleryOfMovies","paginationButtons","API_KEY","BASE_URL","MAIN_PAGE_URL","SEARCH_MOVIE_URL","GENRE_SELECT_URL","TRENDING_DAY_URL","TRENDING_WEEK_URL","page","fetchFirstLoadMovies","response","fetch","firstLoadMovies","json","fetchInputMovieTitle","movieTitle","responseObject","renderMoviesFirstLoad","data","innerHTML","markup","map","poster_path","original_title","title","genre_ids","release_date","vote_average","original_name","id","join","insertAdjacentHTML","renderMoviesInputTitle","window","addEventListener","event","preventDefault","array","arrayMovies","results","forEach","push","movie","console","log","totalPages","total_pages","totalMovies","total_results","pagination","error","value","trim","i","pageButton","createElement","appendChild"],"mappings":";AAsKA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,0BAAA,EAtKA,MAAMA,EAAiBC,SAASC,cAAc,uBACxCC,EAAkBF,SAASC,cAAc,qBACzCE,EAAuBH,SAASC,cAAc,yBAE9CG,EAAkBJ,SAASC,cAAc,mBACzCI,EAAoBL,SAASC,cAAc,uBAO3CK,EAAU,4CACVC,EAAW,+BACXC,EAAgB,oBAChBC,EAAmB,gBACnBC,EAAmB,oBACnBC,EAAmB,sBACnBC,EAAmB,uBAEzB,IAAIC,EAAO,EAKX,MAAMC,EAAuB,UACnBC,MAAAA,QAAiBC,SAChBT,IAAWC,IAAgBF,UAAgBO,KAG3CI,aADuBF,EAASG,QAyI3C,QAAA,qBAAA,EAjIA,MAAMC,EAAuB,MAAA,IACnBJ,MAAAA,QAAiBC,SAChBT,iBAA8BD,WAAiBc,UAAmBP,yBAGlEQ,aADsBN,EAASG,QAQ1C,IAAII,EAAyBC,IACzBnB,EAAgBoB,UAAY,GACtBC,MAAAA,EAASF,EACVG,IAAI,EAAEC,YAAAA,EAAaC,eAAAA,EAAgBC,MAAAA,EAAOC,UAAAA,EAAWC,aAAAA,EAAcC,aAAAA,EAAcC,cAAAA,EAAeC,GAAAA,yIAGjBP,WAAqBE,2EACzDA,2LAGUC,wEACDC,uGAECC,0EAIrDG,KAAK,IACH/B,OAAAA,EAAgBgC,mBAAmB,YAAaX,IAMvDY,EAA0Bd,IAC1BnB,EAAgBoB,UAAY,GACtBC,MAAAA,EAASF,EACVG,IAAI,EAAEC,YAAAA,EAAaC,eAAAA,EAAgBC,MAAAA,EAAOC,UAAAA,EAAWC,aAAAA,EAAcC,aAAAA,EAAcC,cAAAA,EAAeC,GAAAA,yIAGjBP,WAAqBE,2EACzDA,2LAGUC,wEACDC,uGAECC,0EAIrDG,KAAK,IACH/B,OAAAA,EAAgBgC,mBAAmB,YAAaX,IAM3Da,OAAOC,iBAAiB,OAAQ,MAAA,IAC5BC,EAAMC,iBAEF,IACMC,MAAAA,QAAc5B,IACd6B,EAAc,GAEpBD,EAAME,QAAQC,QAAQ,MAAA,IAClBF,EAAYG,KAAKC,KAGrBzB,EAAsBqB,GACtBK,QAAQC,IAAIN,GAENO,MAAAA,QAAmBR,EAAMS,YACzBC,QAAoBV,EAAMW,cAEhCL,QAAQC,oBAAoBC,KAC5BF,QAAQC,sBAAsBG,KAE9BE,EAAWJ,EAAYrB,OAMzB,MAAO0B,GACTP,QAAQO,MAAMA,MAOlBrD,EAAgBqC,iBAAkB,QAAS,MAAA,IACvCC,EAAMC,iBAEArB,MAAAA,EAAarB,EAAeyD,MAAMC,OAEpC,IACMf,MAAAA,QAAcvB,EAAsBC,GACpCuB,EAAc,GAEpBD,EAAME,QAAQC,QAAQ,MAAA,IAClBF,EAAYG,KAAKC,KAGrBV,EAAuBM,GACvBK,QAAQC,IAAIN,GAENO,MAAAA,QAAmBR,EAAMS,YACzBC,QAAoBV,EAAMW,cAEhCL,QAAQC,oBAAoBC,KAC5BF,QAAQC,sBAAsBG,KAE9BE,EAAWJ,EAAYrB,OAMzB,MAAO0B,GACTP,QAAQO,MAAMA,MAMlB,MAAMD,EAAa,MAAOJ,EAAYrB,KAE9BqB,GADJ7C,EAAoB,GAChB6C,GAAc,EACT,IAAA,IAAIQ,EAAI,EAAGA,GAAKR,EAAYQ,IAAK,CAC9BC,IAAAA,EAAa3D,SAAS4D,cAAc,UACxCD,EAAWnC,UAAYkC,EACvBrD,EAAkBwD,YAAYF","file":"fetchData.b37397ab.js","sourceRoot":"../src","sourcesContent":["const inputFormTitle = document.querySelector('.search-form__input');\nconst inputFormButton = document.querySelector('.search-form__btn');\nconst inputFormGenreChange = document.querySelector('.header__genre-option');\n\nconst galleryOfMovies = document.querySelector('.gallery_movies');\nconst paginationButtons = document.querySelector('.pagination_buttons');\n\n// Scenariusz 1: FIRST LOAD\n// Scenariusz 2: SEARCH MOVIE\n// Scenariusz 3: GENRE SELECT\n// Scenariusz 4: TRENDING DAY / TRENDING WEEK\n\nconst API_KEY = '?api_key=fd87aef18dfd3a2446d882cb85b7272d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst MAIN_PAGE_URL = '/trending/all/day';\nconst SEARCH_MOVIE_URL = '/search/movie';\nconst GENRE_SELECT_URL = '/genre/movie/list';\nconst TRENDING_DAY_URL = '/trending/movie/day';\nconst TRENDING_WEEK_URL ='/trending/movie/week';\n\nlet page = 1;\n\n\n// Scenariusz 1: FIRST LOAD krok 1\n// Pobranie danych do galerii, która wyświetla się po WEJŚCIU na stronę\nconst fetchFirstLoadMovies = async () => {\n    const response = await fetch(\n        `${BASE_URL}${MAIN_PAGE_URL}${API_KEY}&page=${page}`\n    );\n    const firstLoadMovies = await response.json();\n    return firstLoadMovies;\n};\nfetchFirstLoadMovies;\n\n\n// Scenariusz 2: SEARCH MOVIE krok 1\n// Pobranie danych do galerii, która wyświetla się po WPISANIU FILMU\nconst fetchInputMovieTitle = async movieTitle => {\n    const response = await fetch(\n        `${BASE_URL}${SEARCH_MOVIE_URL}${API_KEY}&query=${movieTitle}&page=${page}&include_adult=false`\n    );\n    const responseObject = await response.json();\n    return responseObject;\n};\nfetchInputMovieTitle;\n\n\n// Scenariusz 1: FIRST LOAD krok 2\n// Tworzenie galerii filmów po WEJŚCIU na stronę (lub przeładowaniu)\nlet renderMoviesFirstLoad = (data) => {\n    galleryOfMovies.innerHTML = '';\n    const markup = data\n        .map(({poster_path, original_title, title, genre_ids, release_date, vote_average, original_name, id}) => {\n            return `\n                <li class=\"movie-card\">\n                    <img class=\"movie-card__img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"${title}\" loading=\"lazy\" />\n                    <h2 class=\"movie-card__title\">${title}</h2>\n                    <div class=\"movie-card__info\">\n                        <p class=\"movie-card__genre-and-year\">\n                            <span class=\"movie-card__genre\">${genre_ids}</span>\n                            <span class=\"movie-card__year\">${release_date}</span>\n                        </p>\n                        <p class=\"movie-card__vote-average\">${vote_average}</p>\n                    </div>\n                </li>\n            `})\n        .join(\"\");\n    return galleryOfMovies.insertAdjacentHTML('beforeend', markup);\n};\n\n\n// Scenariusz 2: SEARCH MOVIE krok 2\n// Tworzenie galerii po WPISANIU FILMU w input\nlet renderMoviesInputTitle = (data) => {\n    galleryOfMovies.innerHTML = '';\n    const markup = data\n        .map(({poster_path, original_title, title, genre_ids, release_date, vote_average, original_name, id}) => {\n            return `\n                <li class=\"movie-card\">\n                    <img class=\"movie-card__img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"${title}\" loading=\"lazy\" />\n                    <h2 class=\"movie-card__title\">${title}</h2>\n                    <div class=\"movie-card__info\">\n                        <p class=\"movie-card__genre-and-year\">\n                            <span class=\"movie-card__genre\">${genre_ids}</span>\n                            <span class=\"movie-card__year\">${release_date}</span>\n                        </p>\n                        <p class=\"movie-card__vote-average\">${vote_average}</p>\n                    </div>\n                </li>\n            `})\n        .join(\"\");\n    return galleryOfMovies.insertAdjacentHTML('beforeend', markup);\n};\n\n\n// Scenariusz 1: FIRST LOAD krok 3\n// Nasłuchiwanie pierwszego załadowania strony lub przeładowania\nwindow.addEventListener('load', async event => {\n    event.preventDefault();\n\n    try {\n        const array = await fetchFirstLoadMovies ();\n        const arrayMovies = [];\n\n        array.results.forEach(async movie => {\n            arrayMovies.push(movie);\n        });\n\n        renderMoviesFirstLoad(arrayMovies);\n        console.log(arrayMovies);\n\n        const totalPages = await array.total_pages;\n        const totalMovies = await array.total_results;\n\n        console.log(`Total pages: ${totalPages}`);\n        console.log(`Total results: ${totalMovies}`);\n\n        pagination(totalPages, title);\n\n        // arrayMovies.forEach(async movie => {\n        //   console.log(movie);\n        // });\n        \n    } catch (error) {\n    console.error(error);\n    }\n});\n\n\n// Scenariusz 2: SEARCH MOVIE krok 3\n// Nasłuchiwanie zdarzenia wpisania filmu w input\ninputFormButton.addEventListener ('click', async event => {\n    event.preventDefault();\n\n    const movieTitle = inputFormTitle.value.trim();\n\n    try {\n        const array = await fetchInputMovieTitle (movieTitle);\n        const arrayMovies = [];\n\n        array.results.forEach(async movie => {\n            arrayMovies.push(movie);\n        });\n\n        renderMoviesInputTitle(arrayMovies);\n        console.log(arrayMovies);\n\n        const totalPages = await array.total_pages;\n        const totalMovies = await array.total_results;\n\n        console.log(`Total pages: ${totalPages}`);\n        console.log(`Total results: ${totalMovies}`);\n\n        pagination(totalPages, title);\n\n        // arrayMovies.forEach(async movie => {\n        //   console.log(movie);\n        // });\n        \n    } catch (error) {\n    console.error(error);\n    }\n});\n\n\n\nconst pagination = async (totalPages, title) => {\n    paginationButtons = '';\n    if (totalPages >= 1) {\n        for (let i = 1; i <= totalPages; i++) {\n            let pageButton = document.createElement('button');\n            pageButton.innerHTML = i;\n            paginationButtons.appendChild(pageButton);\n        }\n    }\n};\n\n\n\n\n\n\nexport{fetchFirstLoadMovies}"]}